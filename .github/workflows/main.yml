name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK Cache
        uses: actions/cache@v3
        with:
          path: /usr/local/java
          key: ${{ runner.os }}-jdk-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-jdk-

      - name: Use JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          cache: 'maven'

      - name: Set up Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Use Maven 3
        uses: maven/maven-action@v3
        with:
          maven: '3'

      - name: Set SonarQube API Token
        env:
          SONAR_API_TOKEN: ${{ secrets.SONAR_API_TOKEN }}

      - name: Run Unit Tests
        run: mvn test

      - name: Run Integration Tests
        run: mvn verify -DskipUnitTests

      - name: Build with Maven
        run: mvn clean install

      - name: Run SonarQube Analysis
        run: |
          mvn clean package sonar:sonar -Dsonar.projectKey=your-project-key -Dsonar.sources=.
          echo "SonarQube analysis completed"

      - name: Wait for SonarQube Quality Gate
        run: |
          sonar-scanner -Dsonar.login=$SONAR_API_TOKEN -Dsonar.qualitygate.wait=true
        env:
          SONAR_API_TOKEN: ${{ secrets.SONAR_API_TOKEN }}

      # Nexus Repository Credentials (using environment variables)
      # Add your Nexus configuration here
